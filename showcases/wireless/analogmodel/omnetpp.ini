[Config X]
network = AnalogModelShowcaseRoutingNetwork

*.numHosts = 10

*.host[*].mobility.typename = "StationaryMobility"
*.host[*].mobility.initFromDisplayString = false
*.host[*].mobility.constraintAreaMin* = 0m
*.host[*].mobility.constraintAreaMaxX = 400m
*.host[*].mobility.constraintAreaMaxY = 400m
*.host[*].mobility.constraintAreaMaxZ = 0m

[Config Routing]
network = AnalogModelShowcaseRoutingNetwork2

*.numHosts = 10

*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
**.arp.typename = "GlobalArp"

*.host[*].mobility.typename = "LinearMobility"
*.host[*].mobility.initialMovementHeading = uniform(0deg,360deg)
*.host[*].mobility.speed = 25mps

**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m

*.*.routingApp.typename = "Aodv"

*.*.wlan[*].radio.typename = "Ieee80211UnitDiskRadio"
**.radio.transmitter.communicationRange = 100m

**.displayCommunicationRanges = true

**.dataLinkVisualizer*.displayLinks = true
**.networkRouteVisualizer*.displayRoutes = true

*.sourceHost.numApps = 1
*.sourceHost.app[0].typename = "UdpBasicApp"
*.sourceHost.app[0].destAddresses = "destinationHost"
*.sourceHost.app[0].destPort = 1000
*.sourceHost.app[0].messageLength = 50B
*.sourceHost.app[0].sendInterval = 0.1ms     # 10 Mbps
*.sourceHost.app[0].packetName = "Data"

*.destinationHost.numApps = 1
*.destinationHost.app[0].typename = "UdpSink"
*.destinationHost.app[0].localPort = 1000

#*.sourceHost.numApps = 1
#*.sourceHost.app[0].typename = "PingApp"
#*.sourceHost.app[0].destAddr = "destinationHost"

[Config Distance]
network = AnalogModelShowcaseDistanceNetwork

[Config Routing3]
network = AnalogModelShowcaseRoutingNetwork3

# ping app
*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"
*.source.app[0].printPing = true

# data link visualizer
*.visualizer.*.numDataLinkVisualizers = 5
*.visualizer.*.dataLinkVisualizer[*].activityLevel = "peer"
*.visualizer.*.dataLinkVisualizer[*].displayLinks = true
*.visualizer.*.dataLinkVisualizer[0].packetFilter = "aodv::Rreq or GPSRBeacon"
*.visualizer.*.dataLinkVisualizer[1].packetFilter = "ping* or UDP*"
*.visualizer.*.dataLinkVisualizer[1].*Color = "blue"
*.visualizer.*.dataLinkVisualizer[2].packetFilter = "aodv::Rrep"
*.visualizer.*.dataLinkVisualizer[2].*Color = "darkslategray"
*.visualizer.*.dataLinkVisualizer[3].packetFilter = "aodv::Rerr"
*.visualizer.*.dataLinkVisualizer[3].*Color = "red"
*.visualizer.*.dataLinkVisualizer[4].packetFilter = "Hello"
*.visualizer.*.dataLinkVisualizer[4].*Color = "green"

# uncomment for video recording
#*.visualizer.*.networkRouteVisualizer[0].fadeOutMode = "animationTime"
#*.visualizer.*.dataLinkVisualizer[*].fadeOutMode = "animationTime"

*.*.wlan[*].radio.typename = "Ieee80211UnitDiskRadio"
**.radio.transmitter.communicationRange = 100m

**.displayCommunicationRanges = true

**.infoVisualizer[0].displayInfos = true
**.infoVisualizer[0].modules = "*.source.app[0]"

# misc
#**.wlan[*].bitrate = 24Mbps
*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
**.arp.typename = "GlobalArp"

# node movement
*.node*.mobility.typename = "LinearMobility"
*.node*.mobility.initialMovementHeading = uniform(0deg,360deg)
*.node*.mobility.speed = 25mps

**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m

# visualization
*.visualizer.*.routingTableVisualizer[0].displayLabels = false
*.visualizer.*.routingTableVisualizer[0].displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer[0].lineShift = 0

*.visualizer.*.networkRouteVisualizer[0].displayRoutes = true
*.visualizer.*.networkRouteVisualizer[0].packetFilter = "*ping*"

*.visualizer.*.interfaceTableVisualizer[0].displayInterfaceTables = true
*.visualizer.*.interfaceTableVisualizer[0].format = "%a/%l"

# routing protocol parameters
*.*.routingApp.typename = "Aodv"

#*.*.routingApp.activeRouteTimeout = 1s
#*.*.routingApp.deletePeriod = 0.5s

# visualization
*.visualizer.*.routingTableVisualizer[0].displayRoutingTables = true
*.visualizer.*.routingTableVisualizer[0].destinationFilter = "destination"

[Config Distance2]
network = AnalogModelShowcaseDistanceNetwork
sim-time-limit = 0.1s
repeat = 4

# application parameters
*.source.numApps = 1
*.source.app[0].typename = "UdpBasicApp"
*.source.app[*].destAddresses = "destination"
*.source.app[*].destPort = 1000
*.source.app[*].messageLength = 1000byte
*.source.app[*].sendInterval = 1ms

*.destination.numApps = 1
*.destination.app[0].typename = "UdpSink"
*.destination.app[*].localPort = 1000

# visualizer parameters
*.visualizer.*.statisticVisualizer.signalName = "packetSentToUpper"
*.visualizer.*.statisticVisualizer.statisticExpression = "packetErrorRate"
*.visualizer.*.statisticVisualizer.sourceFilter = "*.destination.wlan[*].radio"
*.visualizer.*.statisticVisualizer.format = "packetErrorRate: %v"
*.visualizer.*.infoVisualizer.displayInfos = true
*.visualizer.*.infoVisualizer.modules = "*.destination.app[0]"

# mobility parameters
#*.destination.mobility.typename = "LinearMobility"
#*.destination.mobility.initialMovementHeading = 0deg
#*.destination.mobility.speed = 100mps
#*.destination.mobility.constraintAreaMinX = 500m
#*.destination.mobility.constraintAreaMaxX = 825m

#*.destination.mobility.typename = "LinearMobility"
#*.destination.mobility.initialMovementHeading = 0deg
#*.destination.mobility.speed = 100mps
*.destination.mobility.constraintAreaMinX = 250m
#*.destination.mobility.constraintAreaMaxX = 825m
*.destination.mobility.constraintAreaMaxX = 1000m

*.*.mobility.initialY = 180m
#*.destination.initialX = ${pos=500..1000 step 2}m
#*.destination.mobility.initFromDisplayString = false

*.source.mobility.initialX = 250m
#*.destination.mobility.initialX = ${pos=250..500 step 1}m
#*.destination.mobility.initialX = ${pos=400..450 step 1}m	# this is cool
*.destination.mobility.initialX = ${pos=400..450 step 0.25}m
**.initFromDisplayString = false

# wlan
*.source.**.transmitter.power = 1.5mW
*.source.**.displayCommunicationRange = true
**.backgroundNoise.power = -105dBm
#**.opMode = "a"
**.dataBitrate = 54Mbps
**.wlan*.mac.*.rateSelection.dataFrameBitrate = 54Mbps
**.wlan*.mac.dcf.channelAccess.pendingQueue.packetCapacity = 14

#*.visualizer.*.mediumVisualizer.displayTransmissions = true
#*.visualizer.*.mediumVisualizer.displayReceptions = true

#*.visualizer.*.transportRouteVisualizer.displayRoutes = true

[Config Noise]
network = AnalogModelShowcaseNoiseNetwork

# arp settings
**.arp.typename = "GlobalArp"

# visualizer settings
*.visualizer.*.dataLinkVisualizer.displayLinks = true
*.visualizer.*.physicalLinkVisualizer.displayLinks = true

*.visualizer.*.infoVisualizer.displayInfos = true
*.visualizer.*.infoVisualizer.modules = "*.host*.app[0] OR *.host*.wlan[0].mac.dcf.channelAccess.contention"
*.visualizer.*.infoVisualizer.format = "%t"

*.visualizer.*.mediumVisualizer.displaySignals = true

# for video recording
#*.visualizer.**.fadeOutMode = "animationTime"

# Udp app settings
*.host1.numApps = 1
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[*].destAddresses = "host2"
*.host1.app[*].destPort = 1000
*.host1.app[*].messageLength = 1000Byte
*.host1.app[*].sendInterval = 100us
#*.host1.app[*].startTime = intuniform(0ms,100ms)
*.host1.app[*].startTime = intuniform(0ms,1ms)

*.host2.numApps = 1
*.host2.app[0].typename = "UdpSink"
*.host2.app[*].localPort = 1000

*.host3.numApps = 1
*.host3.app[0].typename = "UdpBasicApp"
*.host3.app[*].destAddresses = "host4"
*.host3.app[*].destPort = 1000
*.host3.app[*].messageLength = 1000Byte
*.host3.app[*].sendInterval = 100us
#*.host3.app[*].startTime = intuniform(0ms,100ms)
*.host3.app[*].startTime = intuniform(0ms,1ms)

*.host4.numApps = 1
*.host4.app[0].typename = "UdpSink"
*.host4.app[*].localPort = 1000

*.host*.wlan[*].radio.typename = "Ieee80211DimensionalRadio"
*.radioMedium.backgroundNoise.powerSpectralDensity = -110dBmWpMHz
*.radioMedium.backgroundNoise.power = nan

*.noiseSource.transmitter.centerFrequency = 2500MHz
*.noiseSource.transmitter.bandwidth = 100MHz
*.noiseSource.transmitter.power = 0.1W
#*.noiseSource.transmitter.duration = 0.05ms
#*.noiseSource.sleepInterval = 0.1s

#*.noiseSource.transmitter.duration = uniform(0.01ms, 0.05ms)
#*.noiseSource.sleepInterval = uniform(0.005ms,0.01ms)

#*.noiseSource.transmitter.duration = uniform(0.1us, 0.5us) # bursts
#*.noiseSource.sleepInterval = uniform(0.005ms,0.01ms)

*.noiseSource.transmitter.duration = uniform(0.1us, 0.5us) # bursts
*.noiseSource.sleepInterval = uniform(0.5ms,0.1ms)

#*.host{1..2}.wlan[*].radio.channelNumber = 0
#*.host{3..4}.wlan[*].radio.channelNumber = 5

*.host{1..2}.wlan[*].radio.channelNumber = 0
*.host{3..4}.wlan[*].radio.channelNumber = 3

*.host*.wlan[*].radio.transmitter.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"
#*.host*.wlan[*].radio.transmitter.timeGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1us -20dB linear c-b*0.5+1us 0dB linear c+b*0.5-1us 0dB linear c+b*0.5+1us -20dB linear c+b -28dB linear c+b*1.5 -40dB right"
#*.host*.wlan[*].radio.transmitter.timeGains = "left -0.02ms -40dB greater -0.01ms 0dB greater 0.01ms 0dB smaller 0.02ms -40dB right "

#*.noiseSource.transmitter.frequencyGains = ""

*.visualizer.*.mediumVisualizer.displaySpectrums = true
*.visualizer.*.mediumVisualizer.displaySpectrograms = true
*.visualizer.*.mediumVisualizer.powerDensityMapSampling = false
#*.visualizer.*.mediumVisualizer.nodeFilter = "not fullPath=~*.noiseSource"
*.visualizer.*.physicalLinkVisualizer.displayLinks = false


